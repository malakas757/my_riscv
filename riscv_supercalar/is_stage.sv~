`timescale 1ns/1ps
import common::*;

module is_stage(/*AUTOSTAGE*/)




/*   dispatch AUTO_TEMPLATE(
			  // Outputs
			  .can_dispatch		(can_dispatch),//to stall pipeline
			  .instr0_valid_intisq	(instr0_valid_intisq),//
			  .instr1_valid_intisq	(instr1_valid_intisq),//
			  .instr0_sqid		(instr0_sqid[SQ_WIDTH-1:0]),
			  .instr1_sqid		(instr1_sqid[SQ_WIDTH-1:0]),
			  // Inputs		 
			  .instr0_pipe_reg	(ir_is_reg0),//
			  .instr1_pipe_reg	(ir_is_reg1),//
			  .instr0_pc_in		(ir_is_reg0_pc),//
			  .instr1_pc_in		(ir_is_reg1_pc),//
			  .instr0_instr_in	(ir_is_reg0_instr),//
			  .instr1_instr_in	(ir_is_reg1_instr),//
			  .rob_left		(rob_left[1:0]),//
			  .instr0_robid_in	(instr0_robid[ROB_WIDTH:0]),//
			  .instr1_robid_in	(instr1_robid[ROB_WIDTH:0]),//
			  .instr0_src1_busy_in	(instr0_rs1_busy),// 
			  .instr0_src2_busy_in	(instr0_rs2_busy),// 
			  .instr1_src1_busy_in	(instr1_rs1_busy),// 
			  .instr1_src2_busy_in	(instr1_rs2_busy),// 
			  .intisq_left		(intisq_left[1:0]),//
			  .memisq_left		(memisq_left[1:0]),//
			  .sq_left		(sq_left[1:0]));*/


   dispatch inst_dispatch(/*AUTOINST*/
			  // Outputs
			  .can_dispatch		(can_dispatch),	 // Templated
			  .instr0_control	(instr0_control), // Templated
			  .instr1_control	(instr1_control), // Templated
			  .instr0_valid_rob	(instr0_valid_rob), // Templated
			  .instr1_valid_rob	(instr1_valid_rob), // Templated
			  .instr0_pc		(instr0_pc[31:0]), // Templated
			  .instr1_pc		(instr1_pc[31:0]), // Templated
			  .instr0_instr		(instr0_instr),	 // Templated
			  .instr1_instr		(instr1_instr),	 // Templated
			  .instr0_T		(instr0_T[PRF_WIDTH-1:0]), // Templated
			  .instr1_T		(instr1_T[PRF_WIDTH-1:0]), // Templated
			  .instr0_T_old		(instr0_T_old[PRF_WIDTH-1:0]), // Templated
			  .instr1_T_old		(instr1_T_old[PRF_WIDTH-1:0]), // Templated
			  .instr0_src1		(instr0_src1[PRF_WIDTH-1:0]), // Templated
			  .instr0_src2		(instr0_src2[PRF_WIDTH-1:0]), // Templated
			  .instr1_src1		(instr1_src1[PRF_WIDTH-1:0]), // Templated
			  .instr1_src2		(instr1_src2[PRF_WIDTH-1:0]), // Templated
			  .instr0_valid_intisq	(instr0_valid_intisq), // Templated
			  .instr1_valid_intisq	(instr1_valid_intisq), // Templated
			  .isq_robid_0		(isq_robid_0[ROB_WIDTH:0]), // Templated
			  .isq_robid_1		(isq_robid_1[ROB_WIDTH:0]), // Templated
			  .isq_src1_busy_0	(isq_src1_busy_0), // Templated
			  .isq_src2_busy_0	(isq_src2_busy_0), // Templated
			  .isq_src1_busy_1	(isq_src1_busy_1), // Templated
			  .isq_src2_busy_1	(isq_src2_busy_1), // Templated
			  .instr0_sqid		(instr0_sqid[SQ_WIDTH-1:0]), // Templated
			  .instr1_sqid		(instr1_sqid[SQ_WIDTH-1:0]), // Templated
			  // Inputs
			  .instr0_pipe_reg	(ir_is_reg0),	 // Templated
			  .instr1_pipe_reg	(ir_is_reg1),	 // Templated
			  .instr0_pc_in		(ir_is_reg0_pc), // Templated
			  .instr1_pc_in		(ir_is_reg1_pc), // Templated
			  .instr0_instr_in	(ir_is_reg0_instr), // Templated
			  .instr1_instr_in	(ir_is_reg1_instr), // Templated
			  .rob_left		(rob_left[1:0]), // Templated
			  .instr0_robid_in	(instr0_robid[ROB_WIDTH:0]), // Templated
			  .instr1_robid_in	(instr1_robid[ROB_WIDTH:0]), // Templated
			  .instr0_src1_busy_in	(instr0_rs1_busy), // Templated
			  .instr0_src2_busy_in	(instr0_rs2_busy), // Templated
			  .instr1_src1_busy_in	(instr1_rs1_busy), // Templated
			  .instr1_src2_busy_in	(instr1_rs2_busy), // Templated
			  .intisq_left		(intisq_left[1:0]), // Templated
			  .memisq_left		(memisq_left[1:0]), // Templated
			  .sq_left		(sq_left[1:0]));	 // Templated

   
/*   rob AUTO_TEMPLATE(
		// Outputs	
		.retire0_valid		(retire0_valid),
		.retire1_valid		(retire1_valid),
		.retire0_is_wb		(retire0_is_wb),
		.retire1_is_wb		(retire1_is_wb),
		.retire0_arf_id		(retire0_arf_id[ARF_WIDTH-1:0]),
		.retire1_arf_id		(retire1_arf_id[ARF_WIDTH-1:0]),
		.retire0_fl_Told	(retire0_fl_Told[PRF_WIDTH-1:0]),
		.retire1_fl_Told	(retire1_fl_Told[PRF_WIDTH-1:0]),
		.retire0_T		(retire0_T[PRF_WIDTH-1:0]),
		.retire1_T		(retire1_T[PRF_WIDTH-1:0]),
		.retire0_robid		(retire0_robid[PRF_WIDTH-1:0]),
		.retire1_robid		(retire1_robid[PRF_WIDTH-1:0]),
		.rob_state		(rob_state[1:0]),
		.walk0_valid		(walk0_valid),
		.walk1_valid		(walk1_valid),
		.walk0_complete		(walk0_complete),
		.walk1_complete		(walk1_complete),
		.walk0_arf_id		(walk0_arf_id[ARF_WIDTH-1:0]),
		.walk1_arf_id		(walk1_arf_id[ARF_WIDTH-1:0]),
		.walk0_T		(walk0_T[PRF_WIDTH-1:0]),
		.walk1_T		(walk1_T[PRF_WIDTH-1:0]),
		// Inputs
		.clk			(clk),
		.reset_n		(reset_n),
		.instr0_valid		(instr0_valid_rob),//
		.instr1_valid		(instr1_valid_rob),//
		.instr0_is_wb		(instr0_is_wb),
		.instr1_is_wb		(instr1_is_wb),				
		.instr0_arf_id		(instr0_arf_id[ARF_WIDTH-1:0]),
		.instr1_arf_id		(instr1_arf_id[ARF_WIDTH-1:0]),
		.int0alu_wb_valid	(int0alu_wb_valid),
		.int0mul_wb_valid	(int0mul_wb_valid),
		.int1alu_wb_valid	(int1alu_wb_valid),
		.int1lsu_wb_valid	(int1lsu_wb_valid),
		.int0alu_wb_robid	(int0alu_wb_robid[ROB_WIDTH:0]),
		.int0mul_wb_robid	(int0mul_wb_robid[ROB_WIDTH:0]),
		.int1alu_wb_robid	(int1alu_wb_robid[ROB_WIDTH:0]),
		.int1lsu_wb_robid	(int1lsu_wb_robid[ROB_WIDTH:0]),
		.flush_robid		(flush_robid[PRF_WIDTH-1:0]),
		.flush_valid		(flush_valid));*/

   
   
   rob inst_rob(/*AUTOINST*/
		// Outputs
		.rob_left		(rob_left[1:0]),
		.instr0_robid		(instr0_robid[ROB_WIDTH:0]),
		.instr1_robid		(instr1_robid[ROB_WIDTH:0]),
		.retire0_valid		(retire0_valid),
		.retire1_valid		(retire1_valid),
		.retire0_is_wb		(retire0_is_wb),
		.retire1_is_wb		(retire1_is_wb),
		.retire0_arf_id		(retire0_arf_id[ARF_WIDTH-1:0]),
		.retire1_arf_id		(retire1_arf_id[ARF_WIDTH-1:0]),
		.retire0_fl_Told	(retire0_fl_Told[PRF_WIDTH-1:0]),
		.retire1_fl_Told	(retire1_fl_Told[PRF_WIDTH-1:0]),
		.retire0_T		(retire0_T[PRF_WIDTH-1:0]),
		.retire1_T		(retire1_T[PRF_WIDTH-1:0]),
		.retire0_robid		(retire0_robid[PRF_WIDTH-1:0]),
		.retire1_robid		(retire1_robid[PRF_WIDTH-1:0]),
		.rob_state		(rob_state[1:0]),
		.walk0_valid		(walk0_valid),
		.walk1_valid		(walk1_valid),
		.walk0_complete		(walk0_complete),
		.walk1_complete		(walk1_complete),
		.walk0_arf_id		(walk0_arf_id[ARF_WIDTH-1:0]),
		.walk1_arf_id		(walk1_arf_id[ARF_WIDTH-1:0]),
		.walk0_T		(walk0_T[PRF_WIDTH-1:0]),
		.walk1_T		(walk1_T[PRF_WIDTH-1:0]),
		// Inputs
		.clk			(clk),
		.reset_n		(reset_n),
		.instr0_valid		(instr0_valid),
		.instr1_valid		(instr1_valid),
		.instr0_is_wb		(instr0_is_wb),
		.instr1_is_wb		(instr1_is_wb),
		.instr0_pc		(instr0_pc[31:0]),
		.instr1_pc		(instr1_pc[31:0]),
		.instr0_instr		(instr0_instr),
		.instr1_instr		(instr1_instr),
		.instr0_T		(instr0_T[PRF_WIDTH-1:0]),
		.instr1_T		(instr1_T[PRF_WIDTH-1:0]),
		.instr0_T_old		(instr0_T_old[PRF_WIDTH-1:0]),
		.instr1_T_old		(instr1_T_old[PRF_WIDTH-1:0]),
		.instr0_arf_id		(instr0_arf_id[ARF_WIDTH-1:0]),
		.instr1_arf_id		(instr1_arf_id[ARF_WIDTH-1:0]),
		.int0alu_wb_valid	(int0alu_wb_valid),
		.int0mul_wb_valid	(int0mul_wb_valid),
		.int1alu_wb_valid	(int1alu_wb_valid),
		.int1lsu_wb_valid	(int1lsu_wb_valid),
		.int0alu_wb_robid	(int0alu_wb_robid[ROB_WIDTH:0]),
		.int0mul_wb_robid	(int0mul_wb_robid[ROB_WIDTH:0]),
		.int1alu_wb_robid	(int1alu_wb_robid[ROB_WIDTH:0]),
		.int1lsu_wb_robid	(int1lsu_wb_robid[ROB_WIDTH:0]),
		.flush_robid		(flush_robid[PRF_WIDTH-1:0]),
		.flush_valid		(flush_valid));
   
   intisq inst_intisq(
		      // Outputs
		      .intisq_left	(intisq_left[1:0]),
		      .ex_slot0_valid	(ex_slot0_valid),
		      .ex_slot1_valid	(ex_slot1_valid),
		      .slot0_T		(slot0_T[PRF_WIDTH-1:0]),
		      .slot1_T		(slot1_T[PRF_WIDTH-1:0]),
		      .slot0_control	(slot0_control),
		      .slot1_control	(slot1_control),
		      .slot0_pc		(slot0_pc[31:0]),
		      .slot1_pc		(slot1_pc[31:0]),
		      .slot0_robid	(slot0_robid[ROB_WIDTH:0]),
		      .slot1_robid	(slot1_robid[ROB_WIDTH:0]),
		      // Inputs
		      .clk		(clk),
		      .reset_n		(reset_n),
		      .instr0_enq_valid	(instr0_valid_intisq),//
		      .instr1_enq_valid	(instr1_valid_intisq),//
		      .instr0_control	(instr0_control),
		      .instr1_control	(instr1_control),
		      .instr0_pc	(instr0_pc[31:0]),
		      .instr1_pc	(instr1_pc[31:0]),
		      .instr0_robid	(isq_robid_0),//
		      .instr1_robid	(isq_robid_1),//
		      .instr0_src1_id	(instr0_src1),//
		      .instr0_src2_id	(instr0_src2),//
		      .instr1_src1_id	(instr1_src1),//
		      .instr1_src2_id	(instr1_src2),//
		      .instr0_T		(instr0_T[PRF_WIDTH-1:0]),//
		      .instr1_T		(instr1_T[PRF_WIDTH-1:0]),//
		      .instr0_src1_busy	(isq_src1_busy_0),//
		      .instr0_src2_busy	(isq_src2_busy_0),// 
		      .instr1_src1_busy	(isq_src1_busy_1),// 
		      .instr1_src2_busy	(isq_src2_busy_1),// 
		      .writeback0_valid	(writeback0_valid), 
		      .writeback0_need_to_wb(writeback0_need_to_wb),
		      .writeback0_prd	(writeback0_prd[PRF_WIDTH-1:0]),
		      .writeback1_valid	(writeback1_valid),
		      .writeback1_need_to_wb(writeback1_need_to_wb),
		      .writeback1_prd	(writeback1_prd[PRF_WIDTH-1:0]),
		      .writeback2_valid	(writeback2_valid),
		      .writeback2_need_to_wb(writeback2_need_to_wb),
		      .writeback2_prd	(writeback2_prd[PRF_WIDTH-1:0]),
		      .writeback3_valid	(writeback3_valid),
		      .writeback3_need_to_wb(writeback3_need_to_wb),
		      .writeback3_prd	(writeback3_prd[PRF_WIDTH-1:0]),
		      .flush_valid	(flush_valid),
		      .flush_robid	(flush_robid[ROB_WIDTH:0]),
		      .mul_slot_busy	(mul_slot_busy));


   busytable inst_bt(
		     // Outputs
		     .instr0_rs1_busy	(instr0_rs1_busy),
		     .instr0_rs2_busy	(instr0_rs2_busy),
		     .instr1_rs1_busy	(instr1_rs1_busy),
		     .instr1_rs2_busy	(instr1_rs2_busy),
		     // Inputs
		     .clk		(clk),
		     .reset_n		(reset_n),
		     .instr0_disp2bt_rs1(instr0_src1),
		     .instr0_disp2bt_rs2(instr0_src2),
		     .instr1_disp2bt_rs1(instr1_src1),
		     .instr1_disp2bt_rs2(instr1_src2),
		     .instr0_disp2bt_rs1_valid(instr0_disp2bt_rs1_valid),
		     .instr0_disp2bt_rs2_valid(instr0_disp2bt_rs2_valid),
		     .instr1_disp2bt_rs1_valid(instr1_disp2bt_rs1_valid),
		     .instr1_disp2bt_rs2_valid(instr1_disp2bt_rs2_valid),
		     .instr0_disp2bt_rd	(instr0_disp2bt_rd[PRF_WIDTH-1:0]),
		     .instr1_disp2bt_rd	(instr1_disp2bt_rd[PRF_WIDTH-1:0]),
		     .instr0_disp2bt_rd_en(instr0_disp2bt_rd_en),
		     .instr1_disp2bt_rd_en(instr1_disp2bt_rd_en),
		     .int0_mul_wb	(int0_mul_wb[PRF_WIDTH-1:0]),
		     .int0_mul_wb_en	(int0_mul_wb_en),
		     .int0_alu_wb	(int0_alu_wb[PRF_WIDTH-1:0]),
		     .int0_alu_wb_en	(int0_alu_wb_en),
		     .int1_alu_wb	(int1_alu_wb[PRF_WIDTH-1:0]),
		     .int1_alu_wb_en	(int1_alu_wb_en),
		     .mem_alu_wb	(mem_alu_wb[PRF_WIDTH-1:0]),
		     .mem_alu_wb_en	(mem_alu_wb_en),
		     .rob_state		(rob_state[1:0]),
		     .rob_walk0_valid	(rob_walk0_valid),
		     .rob_walk0_complete(rob_walk0_complete),
		     .rob_walk0_prd	(rob_walk0_prd[PRF_WIDTH-1:0]),
		     .rob_walk1_valid	(rob_walk1_valid),
		     .rob_walk1_prd	(rob_walk1_prd[PRF_WIDTH-1:0]),
		     .rob_walk1_complete(rob_walk1_complete));
